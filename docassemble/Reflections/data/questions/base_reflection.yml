metadata:
  require login: True
---
features:
  labels above fields: True
  bootstrap theme: theme.css
---
include: 
  - docassemble.ALToolbox:goal_satisfy.yml
---
objects:
  - reflection_questions: DADict.using(auto_gather=False, gathered=True)
  - reflection_questions["chat"]: GoalSatisfactionList.using(goals=reflection_goals)
---
variable name: reflection_goals
data:
  - Demonstrate that you understand the material
  - Demonstrate critical analysis and synthesis
  - Clearly articulate personal learning and how the readings impact your understanding or perspective
  - Writing is clear, well-organized, and free of grammatical errors
---
template: rubric_explanation
content: |
  In your response, consider the following rubric:

  % for goal in reflection_goals:
  - ${ goal }
  % endfor
---
generic object: GoalSatisfactionList
question: |
  % if i == 0:
  Let's go a little deeper
  % else:
  Goal: ${ x[i].goal }
  % endif
subquestion: |
  % if i == 0:
  We want to know more about this reflection goal: ${ x[i].goal }. We'll ask you a few more
  questions to help us understand your reflection better.
  % endif

  ${ collapse_template(x.show_current_progress) }
fields:
  - ${ x[i].question }: x[i].response
    datatype: area
---
mandatory: True
code: |
  questions
  reflection_questions["chat"].gather()
  store_record
  thanks_and_download
---
code: |
  store_variables_snapshot(persistent=True, data={
      k: v for k, v in {
          **reflection_questions.elements,
          "user": user_info().email,
          "datetime": current_datetime(),
          reflection_questions["chat"].initial_question: reflection_questions["chat"].initial_draft,
          "follow_up_questions": [
              {question.question: question.response}
              for question in reflection_questions["chat"].elements
          ],
      }.items() if k != "chat"
  })
  store_record = True
---
event: thanks_and_download
question: |
  Thanks for your reflection!
subquestion: |
  You can download a copy of your responses below. Please attach a copy of your reflection to 
  your weekly reflection assignment on Teams.
attachment:
  - filename: weekly_reflection_${ user_info().email }_${current_datetime() }
    allowed formats: 
      - docx
    content: |
      # Weekly Reflection
      Student: ${ bold(user_info().email) }

      ## Reflection question

      ${ reflection_questions["chat"].initial_question }

      % for key, value in reflection_questions.items():
      % if key == "chat":
      ### Your reflection

      ${ value.show_current_progress }
      % else:
      
      ### ${ key.replace("_", " ").title() }
    
      ${ value }
      % endif
      % endfor